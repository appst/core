export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.5
IP_HOSTDB=192.168.1.5
IP_HOSTMQ=192.168.1.5
IDENTITY_MANAGEMENT_IP=192.168.1.5
IMAGE_MANAGEMENT_IP=192.168.1.5
NETWORK_MANAGEMENT_IP=192.168.1.5
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.5
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.5
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.5
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.5
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.5
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.5
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.5:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=master

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
export LOCAL_CONF=$STACK_HOME/devstack/local.conf
export LOGDIR=$STACK_HOME/logs
export LOGFILE=$LOGDIR/stack.sh.log

export OPENSTACK_RELEASE=ussuri
export OPENSTACK_BRANCH=stable

export PIP_SOURCE=pips  #pkg/pip/pips/pipu - pips: pip system install (default), pipu: pip '--user' install; openstack git installs rely on pip, therefore, use pip everywhere to avoid conflicting package management issues
#export PIP_SOURCE=pips
export OPENSTACKCLIENT=pips  #pkg/pip/pips/pipu/src

#export IDENTITY_INSTALL_METHOD=src
#export KEYSTONE_USE_MOD_WSGI=True
export OS_IDENTITY_API_VERSION=3
export ENABLE_IDENTITY_V2=False

export ENABLE_HTTPD_MOD_WSGI_SERVICES=True
#export IMAGE_INSTALL_METHOD=src
#export GLANCE_USE_MOD_WSGI=True

#export NOVA_INSTALL_METHOD=src
#export NOVA_USE_MOD_WSGI=True

#export NEUTRON_INSTALL_METHOD=src  # neutron requires nova
#export NEUTRON_USE_MOD_WSGI=True

#export CINDER_INSTALL_METHOD=src

#export HORIZON_INSTALL_METHOD=src

#unset SWIFT_INSTALL_METHOD
#unset IRONIC_INSTALL_METHOD
#unset HEAT_INSTALL_METHOD
#unset EC2_INSTALL_METHOD

#export VENV=0
#unset VENV

#export OS_IDENTITY_API_VERSION=2.0  # this defines our default auth method

export DEFAULT_REGION_NAME=RegionOne

export NTP_HOST=ntp

# database root account
#export DATABASE_ROOT_PASSWORD=dev

# root account creates stack account that creates all service accounts...

export DEVSTACK_DB_ROOT=root  # devstack wants user 'root'
export DEVSTACK_DB_PASS=dev

# database administrator account: stack
export HOSTDB=hostdb
export DATABASE_USER=stack
export DATABASE_PASSWORD=dev

export DEVMULTI_DB_ROOT=devmulti
#export DEVMULTI_DB_ROOT=$DATABASE_USER
export DEVMULTI_DB_PASS=dev

# MQ administrator account: rabbit/dev
export HOSTMQ=hostmq
#export MQ_USER=openstack
export MQ_USER=stackrabbit
export MQ_PASS=dev

# devstack needs separate credential so it can simultaneously run with other stacks - iow: multiple stacks won't get their message queues mixed up
#export DEVSTACK_MQ_HOST=hostmq
#export DEVSTACK_MQ_USER=devstack
export DEVSTACK_MQ_USER=stackrabbit
export DEVSTACK_MQ_PASS=dev

#export DEVMULTI_MQ_USER=devmulti
#export DEVMULTI_MQ_PASS=dev
export DEVMULTI_MQ_USER=$MQ_USER
export DEVMULTI_MQ_PASS=$MQ_PASS
export DEVMULTI_MQ_USER=guest  # guest/guest credentials only work via localhost
export DEVMULTI_MQ_PASS=guest  # guest/guest credentials only work via localhost

# linux administrator account: root/
#export SERVICE_PASS=dev

# openstack administrator account: root/
export admin_PASS=dev

# openstack user account: demo/dev
# each individual service gets its own name/password/db 


# *_DBNAME/*_DBUSER/*_DBPASS - database name/username/password
# *_MQNAME/*_MQUSER/*_MQPASS - message queue name/username/password
# *_OSNAME/*_USER/*_OSPASS - openstack project/username/password
# *_UXUSER/*_UXPASS - unix account username/password

#for s in keystone glance nova neutron cinder swift ironic heat placement ceilometer
for s in controller network compute blockstorage objectstorage keystone glance nova neutron cinder swift ironic heat placement ceilometer
do
export ${s}_UXUSER=${s}
export ${s}_UXPASS=dev
export ${s}_DBNAME=${s}
#export ${s}_DBUSER=${s}
export ${s}_DBUSER=stack
export ${s}_DBPASS=dev
export ${s}_MQNAME=${s}
export ${s}_MQUSER=${s}
export ${s}_MQPASS=dev
export ${s}_OSNAME=${s}
export ${s}_OSUSER=${s}
export ${s}_OSPASS=dev
export ${s^^}_CONF_DIR=/etc/${s}
export ${s^^}_LOGDIR=/var/log/${s}
done

export heat_DOMAIN_PASS=dev


export METADATA_SECRET=secret

export STACK_USER=stack
export STACK_PASS=dev

export METADATA_SECRET=secret

export demo_USER=demo
export demo_PASS=dev

export MYSQL_CONF=/etc/mysql/my.cnf
export MYSQL_ERROR_LOG=/var/log/mysql/error.log

export GLANCE_REGISTRY_PORT=9191
export GLANCE_SERVICE_PORT=9292

#export OVS_CONF=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini

# misc
export EMAIL_ADDRESS=r.kendal@gmail.com

export MQ_SERVICE_PORT=5672
export MQ_ADMIN_PORT=15672
export DB_SERVICE_PORT=3306
export PLACEMENT_SERVICE_PORT=8780
export NOVA_SERVICE_PORT=8774
export NEUTRON_SERVICE_PORT=9696
export CINDER_SERVICE_PORT=8776
export KEYSTONE_AUTH_PORT=35357
export KEYSTONE_SERVICE_PORT=5000

export DEFAULT_IMAGE_OS=cirros
export DEFAULT_IMAGE_NAME=cirros-0.3.5-x86_64-disk
#export DEFAULT_IMAGE_NAME=cirros-0.4.0-x86_64-disk
export DEFAULT_FLAVOR_NAME=m1.tiny
export APACHE=apache2
export APACHE_CONF=/etc/apache2/apache2.conf
export APACHE_LOGS=/var/log/apache2
export APACHE_ACCESS_LOG=$APACHE_LOGS/access.log
export APACHE_ERROR_LOG=$APACHE_LOGS/error.log
SERVICE_MANAGEMENT_IP=192.168.1.9
IP_HOSTDB=192.168.1.9
IP_HOSTMQ=192.168.1.9
IDENTITY_MANAGEMENT_IP=192.168.1.9
IMAGE_MANAGEMENT_IP=192.168.1.9
NETWORK_MANAGEMENT_IP=192.168.1.9
NETWORK_EXTERNAL_IP=10.0.0.7
NETWORK_TUNNEL_IP=10.0.1.7
EXTERNAL_FLOATING_IP_START=10.0.0.128
EXTERNAL_FLOATING_IP_END=10.0.0.254
EXTERNAL_FLOATING_IP_PREFIX=
COMPUTE_MANAGEMENT_N1_IP=192.168.1.160
COMPUTE_TUNNEL_N1_IP=10.0.1.160
COMPUTE_STORAGE_N1_IP=10.0.2.160
BLOCK_MANAGEMENT_N1_IP=
BLOCK_STORAGE_N1_IP=
OBJECT_MANAGEMENT_N1_IP=
OBJECT_MANAGEMENT_N2_IP=
OBJECT_TUNNEL_N1_IP=
OBJECT_TUNNEL_N2_IP=
OBJECT_STORAGE_N1_IP=
OBJECT_STORAGE_N2_IP=
IDENTITY_EXTERNAL_IP=10.0.0.7
IDENTITY_TUNNEL_IP=10.0.1.7
IDENTITY_STORAGE_IP=

#---> dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
IP_hostdb=192.168.1.9
DATABASE_TYPE=mysql
IP_hostmq=192.168.1.9
HOSTDB_INSTALL_METHOD=devstack
HOSTMQ_INSTALL_METHOD=devstack

IP_identity=192.168.1.9
IDENTITY_USE_MOD=uwsgi
IDENTITY_INSTALL_METHOD=devstack
IP_image=192.168.1.9
IMAGE_USE_MOD=uwsgi
IMAGE_INSTALL_METHOD=devstack
PROV_DOWNLOAD_DEFAULT_IMAGES=True
IP_network=192.168.1.9
NETWORK_USE_MOD=eventlet
NETWORK_INSTALL_METHOD=devstack
PROV_CREATE_INITIAL_NETWORKS=True
PROV_NETWORK_TEST=True
IP_compute=192.168.1.9
COMPUTE_INSTALL_METHOD=devstack
COMPUTE_USE_MOD=uwsgi
PROV_COMPUTE_TEST=False
PROV_AVAILABILITY_ZONE=nova:controller:controller.picasso.digital
DEVSTACK_SOURCE=ussuri
PNICS="   IP1-192.168.1.9:MNIC:192.168.1.0   IP2-10.0.0.7:XNIC:10.0.0.0-promiscuous:provider-flat   IP3-manual:TNIC:intnet-tunnel"
#<--- dynamically generated from: /mnt/proot/project/openstack/controller/pre-processor.sh
